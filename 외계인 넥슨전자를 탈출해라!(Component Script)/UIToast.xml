<?xml version="1.0" encoding="utf-8"?>
<CodeBlockFile xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Id="63fe07f0-2bcd-462c-8157-d6031e053b5e" Language="Lua" Name="UIToast" Type="Logic" Source="None" ModifyTime="2022-09-29T23:08:02.4359332+09:00">
  <CoreVersion Major="0" Minor="2" />
  <ScriptVersion Major="1" Minor="1" />
  <Description />
  <Properties>
    <CodeBlockProperty Name="message" Type="Component" DefaultValue="7af9e538-1713-49f7-a83e-711c0f4b4a3c:52" SyncDirection="None" />
    <CodeBlockProperty Name="toastGroup" Type="Entity" DefaultValue="0bc398f9-29cb-4d89-a78d-f24742b117e8" SyncDirection="None" />
    <CodeBlockProperty Name="duration" Type="number" DefaultValue="2" SyncDirection="None" />
    <CodeBlockProperty Name="tweenDuration" Type="number" DefaultValue="0.1" SyncDirection="None" />
    <CodeBlockProperty Name="tweenEventId" Type="number" DefaultValue="0" SyncDirection="None" />
    <CodeBlockProperty Name="isTweenPlaying" Type="boolean" DefaultValue="false" SyncDirection="None" />
    <CodeBlockProperty Name="inited" Type="boolean" DefaultValue="false" SyncDirection="None" />
    <CodeBlockProperty Name="offset" Type="number" DefaultValue="0" SyncDirection="None" />
  </Properties>
  <Methods>
    <CodeBlockMethod Name="ShowMessage" ExecSpace="Client">
      <Return Type="void" SyncDirection="None" />
      <Arguments>
        <CodeBlockProperty Name="message" Type="string" DefaultValue="&quot;&quot;" SyncDirection="None" />
      </Arguments>
      <Code><![CDATA[
if self.inited == false then
	self.inited = true
	self.offset = -self.message.Entity.UITransformComponent.anchoredPosition.y
end
self.message.Text = message
self:StartTween()
]]></Code>
    </CodeBlockMethod>
    <CodeBlockMethod Name="StartTween" ExecSpace="All">
      <Return Type="void" SyncDirection="None" />
      <Arguments />
      <Code><![CDATA[
local canvasGroup = self.message.Entity.CanvasGroupComponent
local transform = self.message.Entity.UITransformComponent
if self.tweenEventId > 0 then
	_TimerService:ClearTimer(self.tweenEventId)
	self.tweenEventId = 0
else
	canvasGroup.GroupAlpha = 0
end
self.toastGroup.Enable = true
local time = 0

local preTime = _UtilLogic.ElapsedSeconds

local tween = function()
	local delta = _UtilLogic.ElapsedSeconds - preTime
	time = time + delta
	preTime = _UtilLogic.ElapsedSeconds

	local alpha = canvasGroup.GroupAlpha 
	if time >= (self.duration + self.tweenDuration) then		
		self.toastGroup.Enable = false
		_TimerService:ClearTimer(self.tweenEventId)
		self.tweenEventId = 0
		alpha = 0
	else
		if time > self.duration then			
			alpha = alpha - delta / self.tweenDuration
		else
			alpha = alpha + delta / self.tweenDuration
		end			
	end	
	alpha = math.min(1,math.max(alpha,0))
	
	canvasGroup.GroupAlpha = alpha
	local tweenValue = _TweenLogic:Ease(0,1,1,EaseType.SineEaseIn,alpha)
	transform.anchoredPosition = Vector2(0,-self.offset * tweenValue)
end

self.tweenEventId = _TimerService:SetTimerRepeat(tween,1/60)


]]></Code>
    </CodeBlockMethod>
  </Methods>
  <EntityEventHandlers />
</CodeBlockFile>